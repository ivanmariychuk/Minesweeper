type: edu
custom_name: stage2
files:
- name: test/MinesweeperTest.java
  visible: false
  text: |
    import minesweeper.MainKt;
    import org.hyperskill.hstest.v6.dynamic.output.SystemOutHandler;
    import org.hyperskill.hstest.v6.stage.BaseStageTest;
    import org.hyperskill.hstest.v6.testcase.CheckResult;
    import org.hyperskill.hstest.v6.testcase.TestCase;

    import java.util.*;
    import java.util.stream.Collectors;

    public class MinesweeperTest extends BaseStageTest<Integer> {

        public MinesweeperTest() {
            super(MainKt.class);
        }

        @Override
        public List<TestCase<Integer>> generate() {
            List<TestCase<Integer>> tests = new ArrayList<>();
            for (int i = 1; i <= 50; i++) {
                TestCase<Integer> test = new TestCase<Integer>()
                    .addInput("" + i)
                    .setAttach(i);
                tests.add(test);
                tests.add(test);
            }
            return tests;
        }

        @Override
        public CheckResult check(String reply, Integer attach) {

            String outputSinceLastInput = SystemOutHandler.getDynamicOutput().trim();

            List<String> lines =
                Arrays.stream(outputSinceLastInput.split("\n"))
                    .map(String::trim)
                    .collect(Collectors.toList());

            if (lines.isEmpty()) {
                return CheckResult.FALSE(
                    "Looks like you didn't output a single line!"
                );
            }

            if (lines.size() != 9) {
                return CheckResult.FALSE(
                    "You should output exactly 9 lines of the field. Found: " + lines.size() + "."
                );
            }

            int mines = 0;

            for (String line : lines) {
                if (line.length() != 9) {
                    return CheckResult.FALSE(
                        "One of the lines of the field doesn't have 9 symbols, " +
                            "but has " + line.length() + ".\n" +
                            "This line is \"" + line + "\""
                    );
                }

                for (char c : line.toCharArray()) {
                    if (c != 'X' && c != '.') {
                        return CheckResult.FALSE(
                            "One of the characters is not equal to either 'X' or '.'.\n" +
                                "In this line: \"" + line + "\"."
                        );
                    }
                    if (c == 'X') {
                        mines++;
                    }
                }
            }

            if (attach != mines) {
                return CheckResult.FALSE(
                    "Expected to see " + attach + " mines, found " + mines
                );
            }

            return CheckResult.TRUE;
        }
    }
  learner_created: false
- name: src/minesweeper/Minesweeper.kt
  visible: true
  text: |-
    package minesweeper

    import kotlin.random.Random

    class Minesweeper(val width: Int, val height: Int, val mines: Int) {
        private var field: Array<CharArray> = Array(height){ CharArray(width) }

        companion object {
            fun create(width: Int = 9, height: Int = 9, mines: Int = 10): Minesweeper = Minesweeper(width, height, mines)
        }

        init {
            configureField()
        }

        fun start() {
            printField()
        }

        private fun configureField() {
            var mines = this.mines
            var all = height * width
            for(row in field) {
                for (i in row.indices) {
                    val cell = Random.nextInt(0, all)
                    if (cell < mines) {
                        mines--
                        row[i] = '*'
                    } else {
                        all--
                        row[i] = '.'
                    }
                }
            }
        }

        private fun printField() {
            for(row in field) {
                for (cell in row) {
                    print(cell)
                }
                println()
            }
        }
    }
  learner_created: true
- name: src/minesweeper/Main.kt
  visible: true
  text: |
    package minesweeper

    fun main() {
        Minesweeper.create().start()
    }
  learner_created: true
feedback_link: https://hyperskill.org/projects/8/stages/47/implement
status: Solved
record: 2
